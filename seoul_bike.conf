input {
  http_poller {
    urls => {
	    lee => {
            method => get
            url => "http://openapi.seoul.go.kr:8088/PersonalKey/json/bikeList/1/1000/"
		  }
    }
    request_timeout => 60
    schedule => { cron => "* * * * * UTC " }
    codec => "json"
    metadata_target => "http_poller_metadata"
  }
  http_poller{
    urls => {
	    lee => {
            method => get
            url => "http://openapi.seoul.go.kr:8088/PersonalKey/json/bikeList/1001/2000/"
		  }
    }
    request_timeout => 60
    schedule => { cron => "* * * * * UTC " }
    codec => "json"
    metadata_target => "http_poller_metadata"
  }
  http_poller{
    urls => {
	    lee => {
            method => get
            url => "http://openapi.seoul.go.kr:8088/PersonalKey/json/bikeList/2001/3000/"
		  }
    }
    request_timeout => 60
    schedule => { cron => "* * * * * UTC " }
    codec => "json"
    metadata_target => "http_poller_metadata"
  }
  
}

filter {
    split {
      field => "[rentBikeStatus][row]"
    }
    mutate {
      add_field => {"[location][lat]"=>"%{[rentBikeStatus][row][stationLatitude]}"}
      add_field => {"[location][lon]"=>"%{[rentBikeStatus][row][stationLongitude]}"}
    }
    mutate{
      add_field => {"stationId" => "%{[rentBikeStatus][row][stationId]}"}
      add_field => {"stationName"=> "%{[rentBikeStatus][row][stationName]}"}
      add_field => {"parkingBikeCnt"=>"%{[rentBikeStatus][row][parkingBikeTotCnt]}"}
      add_field => {"parkingLotSiz"=>"%{[rentBikeStatus][row][rackTotCnt]}"}
    }
    mutate{
      convert=>{"[location][lat]"=>"float"}
      convert=>{"[location][lon]"=>"float"}
    }
    mutate{
      rename =>{"[location]"=>"location"}
    }
    mutate{
      remove_field=>["@version","message","rentBikeStatus","http_poller_metadata"]
    }
}

output {
  elasticsearch{
    hosts => ["ip:9200"]
    index =>"seoul_bike"
    document_id => "%{stationId}"
  }
  stdout{
  codec => rubydebug
  }
}
